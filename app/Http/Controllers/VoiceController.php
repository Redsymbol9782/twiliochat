<?phpnamespace App\Http\Controllers;use Illuminate\Http\Request;use Twilio\Rest\Client;use Twilio\Jwt\ClientToken;use Twilio\TwiML;class VoiceController extends Controller{	public function voice(){		return view('voice.index');	}	public function voice_call(Request $request){		$accountSid = config('app.twilio')['TWILIO_ACCOUNT_SID'];        $authToken  = config('app.twilio')['TWILIO_AUTH_TOKEN'];        $appSid     = config('app.twilio')['TWILIO_APP_SID'];        $client = new Client($accountSid, $authToken);		$userPhone = $request->get('userPhone');		$salesPhone = $request->get('salesPhone');		$encodedSalesPhone = urlencode(str_replace(' ','',$salesPhone));		$client = new Twilio\Rest\Client(			$accountSid,			$authToken		);		$url = config('app.url');    		$client->calls			->create($userPhone, // to				$request->get('salesPhone'), // from				array(					"method" => "GET",					"statusCallback" => $url."/public/twilio_log.php",					"statusCallbackEvent" => array("initiated","answered"),					"statusCallbackMethod" => "POST",					"record" => True,					"url" => $url."/outbound/".$encodedSalesPhone				)		);		// return a JSON response		return array('message' => 'Call incoming!');	}	public function outbound_call($salesPhone=null){		// A message for Twilio's TTS engine to repeat		$sayMessage = 'Thanks for contacting our sales department. Our        next available representative will take your call.';		$twiml = new Twilio\Twiml();		$twiml->say($sayMessage, array('voice' => 'alice'));		$twiml->dial($salesPhone);		$twiml->record($salesPhone);		$response = Response::make($twiml, 200);		$response->header('Content-Type', 'text/xml');		return $response;	}}